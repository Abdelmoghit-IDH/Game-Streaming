stages:
  - test
  - build_backend
  - build_frontend
  - deploy

variables:
  BACKEND_APP_NAME: auth-image
  FRONTEND_APP_NAME: ui-image
  BACKEND_CI_REGISTRY_IMAGE: docler/prankster08/$BACKEND_APP_NAME
  FRONTEND_CI_REGISTRY_IMAGE: prankster08/$FRONTEND_APP_NAME
  CD_CHART_REPO: Game-Streaming
  CD_GIT_REPOSITORY: git@gitlab.com:abdelmoghit.idhsaine/$CD_CHART_REPO.git
  CD_MANIFEST_FILE: Chart.yaml
  TAG: $CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA

before_script:
  - echo $BACKEND_CI_REGISTRY_IMAGE:$TAG $PWD
  # login
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD

after_script:
  - docker image prune -af

test_auth:
  stage: test
  script:
    - cd Auth-service
    - npm test
    - cd ..

build_backend_image:
  stage: build_backend
  script:
    # Docker Build && Push image
    - cd Auth-service
    - cat Dockerfile
    - docker build --tag $BACKEND_CI_REGISTRY_IMAGE:$TAG .
    - docker push $BACKEND_CI_REGISTRY_IMAGE:$TAG

build_frontend_image:
  stage: build_frontend
  script:
    # Docker Build && Push image
    - cd Front-end
    - cat Dockerfile
    - docker build --tag $FRONTEND_CI_REGISTRY_IMAGE:$TAG .
    - docker push $FRONTEND_CI_REGISTRY_IMAGE:$TAG

tag_latest_image:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  script:
    - docker pull $BACKEND_CI_REGISTRY_IMAGE:$TAG
    - docker tag $BACKEND_CI_REGISTRY_IMAGE:$TAG $BACKEND_CI_REGISTRY_IMAGE:latest
    - docker push $BACKEND_CI_REGISTRY_IMAGE:latest
    - docker pull $FRONTEND_CI_REGISTRY_IMAGE:$TAG
    - docker tag $FRONTEND_CI_REGISTRY_IMAGE:$TAG $FRONTEND_CI_REGISTRY_IMAGE:latest
    - docker push $FRONTEND_CI_REGISTRY_IMAGE:latest

